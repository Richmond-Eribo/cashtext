---
import { escapeHTML } from "astro/runtime/server/escape.js"

interface Props {
  title: string
  subtext: string[]
  image: string
  index: number
}

const { title, subtext, image, index } = Astro.props

// const escapedSubtext = subtext.map(S => escapeHTML(S) )
---

<div class="how-it-works-card">
  <div class="how-it-works-card--title-container">
    <span class="number">
      {index < 10 ? `0${index + 1}` : index + 1}
    </span>

    <h5 class="title">
      {title}
    </h5>
  </div>

  <div class="subtext">
    {subtext.map(subtext => <Fragment set:html={subtext} />)}
  </div>

  <div class="image">
    <img src={image} alt={`3d image for ${title}`} style="width: 145px;" />
  </div>
</div>

<style lang="scss">
  @import "../styles/_mixin.scss";

  .how-it-works-card {
    position: relative;
    overflow: hidden;
    height: 400px;
    min-width: 150px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;

    border-radius: 25px;
    padding: 25px;
    background: var(--Base-Primary);

    /* // medium to large */
    @include respond-to("medium") {
      flex-basis: clamp(400px, 100%, 490px);
    }
  }

  .number {
    color: rgba(154, 255, 250, 0.94);
    font-family: "Helvetica Neue LT Std";
    font-size: 40px;
    font-style: normal;
    font-weight: 750;
    line-height: normal;
  }

  .title {
    color: var(--Base-White, #fff);
    font-size: 33px;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
  }

  .subtext {
    color: var(--Colors-Base-White, #fff);
    font-size: 14px;
    font-weight: 300;
    line-height: normal;

    text-align: justify;
  }

  p {
    margin-top: 10px !important;
    color: blueviolet;
  }

  .man {
    color: blueviolet;
  }

  span {
    font-size: 14px;
    font-style: italic;
    font-weight: 300;
    line-height: normal;
  }

  .image {
    position: absolute;
    right: -40px;
    top: 111px;
  }
</style>
